package gui;

import Listeners.DeletePostListener;
import social.Comment;
import social.Group;
import social.TextPost;
import social.User;

public class GroupPostView extends javax.swing.JPanel {

    private final TextPost post;
    private final User currentUser;
    private final Group group;
    private DeletePostListener listener;

    /**
     * Creates new form SmallPostView
     *
     * @param post
     * @param currentUser
     */
    public GroupPostView(TextPost post, User currentUser, Group gp) {
        initComponents();
        this.post = post;
        this.currentUser = currentUser;
        this.group = gp;

        authorName.setText(post.getOwner().getName());
        contentArea.setEditable(false);
        contentArea.setText(post.getContent());
        photo.setVisible(false);

        showLikes();
        showComments();
        buttonsVisibility();

        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        authorName = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        contentArea = new javax.swing.JTextArea();
        photo = new javax.swing.JLabel();
        likeButton = new javax.swing.JButton();
        dislikeButton = new javax.swing.JButton();
        commentButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        commentsPanel = new javax.swing.JPanel();
        likesLabel = new javax.swing.JLabel();
        deleteButton = new javax.swing.JButton();

        authorName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        contentArea.setColumns(20);
        contentArea.setLineWrap(true);
        contentArea.setRows(5);
        jScrollPane1.setViewportView(contentArea);

        likeButton.setText("Like");
        likeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                likeButtonActionPerformed(evt);
            }
        });

        dislikeButton.setText("Dislike");

        commentButton.setText("Comment");
        commentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commentButtonActionPerformed(evt);
            }
        });

        commentsPanel.setLayout(new javax.swing.BoxLayout(commentsPanel, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane2.setViewportView(commentsPanel);

        likesLabel.setText("Likes: ");

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(photo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(likeButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dislikeButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(commentButton)
                        .addGap(4, 4, 4)
                        .addComponent(deleteButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(likesLabel)
                        .addGap(0, 213, Short.MAX_VALUE))
                    .addComponent(jScrollPane2)
                    .addComponent(authorName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(authorName, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(photo, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(likeButton)
                    .addComponent(commentButton)
                    .addComponent(dislikeButton)
                    .addComponent(likesLabel)
                    .addComponent(deleteButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void commentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commentButtonActionPerformed
        AddComment ac = new AddComment(null, true, currentUser, post);
        showComments();
        buttonsVisibility();
    }//GEN-LAST:event_commentButtonActionPerformed

    private void likeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_likeButtonActionPerformed
        post.likePost(currentUser.getUuid());
        showLikes();
        buttonsVisibility();
    }//GEN-LAST:event_likeButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        if (listener != null) {
            listener.deletePost(post, currentUser);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel authorName;
    private javax.swing.JButton commentButton;
    private javax.swing.JPanel commentsPanel;
    private javax.swing.JTextArea contentArea;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton dislikeButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton likeButton;
    private javax.swing.JLabel likesLabel;
    private javax.swing.JLabel photo;
    // End of variables declaration//GEN-END:variables

    private void showLikes() {
        likesLabel.setText("Likes: " + this.post.numLikes());
    }

    private void showComments() {

        commentsPanel.removeAll();

        for (Comment comment : this.post.getComments()) {
            CommentView cv = new CommentView(comment, currentUser, post, commentsPanel);
            commentsPanel.add(cv);
        }

        commentsPanel.repaint();
        commentsPanel.revalidate();

    }

    private void buttonsVisibility() {
        deleteButton.setVisible(false);
        if (post.getOwner().getUuid().equals(currentUser.getUuid()) || group.isAdmin(currentUser.getUuid())) {
            deleteButton.setVisible(true);
        }
        if (!post.hasLiked(currentUser.getUuid())) {
            likeButton.setVisible(true);
            dislikeButton.setVisible(false);
        } else {
            likeButton.setVisible(false);
            dislikeButton.setVisible(true);
        }
    }

    public void setListener(DeletePostListener listener) {
        this.listener = listener;
    }
}
