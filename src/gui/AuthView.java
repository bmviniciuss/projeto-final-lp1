/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.HashMap;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JList;
import javax.swing.JOptionPane;
import social.Database;
import social.User;
import utils.Messages;
import utils.Validators;
import Listeners.EditBioListener;
import social.Post;

/**
 *
 * @author bmvin
 */
public class AuthView extends javax.swing.JFrame {

    private User user;
    private Database db;

    /**
     * Creates new form AuthView
     * @param user current User
     * @param db application database reference
     */
    public AuthView(User user, Database db) {
        initComponents();
        this.setLocationRelativeTo(null);

        if (user != null) {
            this.user = user;
        }

        this.db = db;
        
        // SET APP TITLE
        setTitle("Social App - " + this.user.getName());

        // PROFILE PANEL
//        nameLabel.setText(this.user.getName());
        profilePanel.setUser(user);
        populatePosts();
        
        // PROFILE PIC
        ImageIcon imageIcon = new ImageIcon(getClass().getResource("vinicius_profile.jpg"));
        Image img = imageIcon.getImage();
        Image newImg = img.getScaledInstance(133, 175, java.awt.Image.SCALE_SMOOTH);
        ImageIcon icon = new ImageIcon(newImg);
        
////        icon = null;
//        if (icon != null) {
//            imageLabel.setIcon(icon);
//            imageLabel.setText(null);
//        } else {
//            imageLabel.setText("No Profile picture\n found!");
//        }
//
//        // BIO
//        bioArea.setEditable(false);
//        EditBioListener listener = new EditBioListener(this.user, editBioButton, bioArea);
//        editBioButton.addActionListener(listener);

        // NOTIFICATION PANEL
        updateNotificationPanel();

        // FRIENDS PANEL
        showFriendsPanel();

        // EXIT LISTENER
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent we) {
                db.serializeAllData();
                dispose();
            }

        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabPane = new javax.swing.JTabbedPane();
        profilePane = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        postsList = new javax.swing.JList<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        postTextArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        makePostButton = new javax.swing.JButton();
        clearPostButton = new javax.swing.JButton();
        postPublicBox = new javax.swing.JCheckBox();
        profilePanel = new gui.ProfilePanel();
        notificationPanel = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        requetsList = new javax.swing.JList<>();
        friendsPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        friendsList = new javax.swing.JList<>();
        groupsPanel = new javax.swing.JPanel();
        searchPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        nameSearchLabel = new javax.swing.JLabel();
        nameSearchField = new javax.swing.JTextField();
        nameSearchButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        searchFriendsList = new javax.swing.JList<>();
        optionsPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        logoutButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 486));
        setPreferredSize(new java.awt.Dimension(800, 486));

        postsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        postsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                postsListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(postsList);

        postTextArea.setColumns(20);
        postTextArea.setRows(5);
        jScrollPane6.setViewportView(postTextArea);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Make a Post:");

        makePostButton.setText("Make Post");
        makePostButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makePostButtonActionPerformed(evt);
            }
        });

        clearPostButton.setText("Clear");
        clearPostButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearPostButtonActionPerformed(evt);
            }
        });

        postPublicBox.setText("Public");

        javax.swing.GroupLayout profilePaneLayout = new javax.swing.GroupLayout(profilePane);
        profilePane.setLayout(profilePaneLayout);
        profilePaneLayout.setHorizontalGroup(
            profilePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profilePaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(profilePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(profilePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(profilePaneLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(profilePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, profilePaneLayout.createSequentialGroup()
                                .addComponent(makePostButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clearPostButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                                .addComponent(postPublicBox)))))
                .addContainerGap())
        );
        profilePaneLayout.setVerticalGroup(
            profilePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profilePaneLayout.createSequentialGroup()
                .addComponent(profilePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(profilePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                    .addGroup(profilePaneLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(profilePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(makePostButton)
                            .addComponent(clearPostButton)
                            .addComponent(postPublicBox))))
                .addContainerGap())
        );

        tabPane.addTab("Profile", profilePane);

        requetsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                requetsListMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(requetsList);

        javax.swing.GroupLayout notificationPanelLayout = new javax.swing.GroupLayout(notificationPanel);
        notificationPanel.setLayout(notificationPanelLayout);
        notificationPanelLayout.setHorizontalGroup(
            notificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(notificationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 775, Short.MAX_VALUE)
                .addContainerGap())
        );
        notificationPanelLayout.setVerticalGroup(
            notificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(notificationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabPane.addTab("Notifications", notificationPanel);

        jScrollPane4.setViewportView(friendsList);

        javax.swing.GroupLayout friendsPanelLayout = new javax.swing.GroupLayout(friendsPanel);
        friendsPanel.setLayout(friendsPanelLayout);
        friendsPanelLayout.setHorizontalGroup(
            friendsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(friendsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 775, Short.MAX_VALUE)
                .addContainerGap())
        );
        friendsPanelLayout.setVerticalGroup(
            friendsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(friendsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabPane.addTab("Friends", friendsPanel);

        javax.swing.GroupLayout groupsPanelLayout = new javax.swing.GroupLayout(groupsPanel);
        groupsPanel.setLayout(groupsPanelLayout);
        groupsPanelLayout.setHorizontalGroup(
            groupsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 795, Short.MAX_VALUE)
        );
        groupsPanelLayout.setVerticalGroup(
            groupsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 458, Short.MAX_VALUE)
        );

        tabPane.addTab("Groups", groupsPanel);

        nameSearchLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nameSearchLabel.setText("Search:");

        nameSearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameSearchFieldKeyPressed(evt);
            }
        });

        nameSearchButton.setText("Search");
        nameSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameSearchButtonActionPerformed(evt);
            }
        });

        searchFriendsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        searchFriendsList.setToolTipText("");
        searchFriendsList.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        searchFriendsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchFriendsListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(searchFriendsList);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(nameSearchLabel)
                        .addGap(18, 18, 18)
                        .addComponent(nameSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 572, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameSearchButton, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nameSearchButton, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(nameSearchField)
                    .addComponent(nameSearchLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tabPane.addTab("Search", searchPanel);

        optionsPanel.setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.BorderLayout());

        logoutButton.setText("Logout");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });
        jPanel1.add(logoutButton, java.awt.BorderLayout.PAGE_START);

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        jPanel1.add(exitButton, java.awt.BorderLayout.PAGE_END);

        optionsPanel.add(jPanel1, new java.awt.GridBagConstraints());

        tabPane.addTab("Options", optionsPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        // TODO add your handling code here:
        this.db.serializeAllData();
        PublicView pv = new PublicView(this.db);
        pv.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
        this.db.serializeAllData();
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void doNameSearch() {
        String nameSearch = "";

        clearSearchFriendsList();

        //validate input
        nameSearch = nameSearchField.getText().trim();

        if (!Validators.checkNotEmptyStringNotNull(nameSearch)) {
            JOptionPane.showMessageDialog(this, Messages.EMPTY_NAME_SEARCH_FIELD, "Empty name", JOptionPane.WARNING_MESSAGE);
        } else {
            HashMap<String, User> searchResult = this.db.searchUsersByName(nameSearch);
            if (searchResult != null) {
                DefaultListModel<User> dlm = new DefaultListModel<User>();
                for (String key : searchResult.keySet()) {
                    if (!key.equals(this.user.getUuid())) {
                        dlm.addElement(searchResult.get(key));

                    }
                }
                searchFriendsList.setModel(dlm);
            } else {
                JOptionPane.showMessageDialog(this, Messages.NO_USERS_FOUND_WITH_THAT_NAME, "Users Not Found", JOptionPane.WARNING_MESSAGE);
            }
        }
    }

    private void nameSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameSearchButtonActionPerformed
        doNameSearch();
    }//GEN-LAST:event_nameSearchButtonActionPerformed

    private void clearSearchFriendsList() {
        DefaultListModel<User> dlm = new DefaultListModel<User>();
        searchFriendsList.setModel(dlm);
    }

    private void searchFriendsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchFriendsListMouseClicked
        // TODO add your handling code here:
        JList list = (JList) evt.getSource();
        if (evt.getClickCount() == 2 && list.getModel().getSize() != 0) {
            int index = list.locationToIndex(evt.getPoint());
            User selectedUser = (User) list.getModel().getElementAt(index);
            if (selectedUser != null) {
                PublicProfile pp = new PublicProfile(this, true, selectedUser, this.user, this.db);
            }
        }
    }//GEN-LAST:event_searchFriendsListMouseClicked

    private void nameSearchFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameSearchFieldKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            doNameSearch();
        }
    }//GEN-LAST:event_nameSearchFieldKeyPressed

    private void updateNotificationPanel() {
        int nNotifications = this.user.getRequests().size();
        tabPane.setTitleAt(1, "Notifications (" + nNotifications + ")");

        DefaultListModel<User> requests = new DefaultListModel<User>();
        for (String key : this.user.getRequests()) {
            User u = this.db.getUserById(key);
            if (u != null) {
                requests.addElement(u);
            }
        }

        requetsList.setModel(requests);
    }

    private void requetsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_requetsListMouseClicked
        JList list = (JList) evt.getSource();
        if (evt.getClickCount() == 2 && list.getModel().getSize() != 0) {
            int index = list.locationToIndex(evt.getPoint());
            User selectedUser = (User) list.getModel().getElementAt(index);
            if (selectedUser != null) {
                RequestDialog rd = new RequestDialog(this, true, selectedUser, this.user);
            }
        }
        updateNotificationPanel();
        showFriendsPanel();
    }//GEN-LAST:event_requetsListMouseClicked

    private void clearPostButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearPostButtonActionPerformed
        clearPostFields();
    }//GEN-LAST:event_clearPostButtonActionPerformed

    private void makePostButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makePostButtonActionPerformed
        // TODO add your handling code here:
        String postContent = "";
        boolean isPublic = false;
        String warnings = "";

        // verify post content
        postContent = postTextArea.getText().trim();

        if(!Validators.checkNotEmptyStringNotNull(postContent)) {
            warnings += "Content must be not empty.\n";
        }

        if(postPublicBox.isSelected()) {
            isPublic = true;
        }

        if(!warnings.isEmpty()) {
            JOptionPane.showMessageDialog(this, warnings, "Error Make Post", JOptionPane.WARNING_MESSAGE);
        } else {
            Post post = new Post(this.user, postContent, isPublic);
            this.user.addPost(post);
            clearPostFields();
            populatePosts();
        }
    }//GEN-LAST:event_makePostButtonActionPerformed

    private void postsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_postsListMouseClicked
        // TODO add your handling code here:
        JList list = (JList) evt.getSource();
        if (evt.getClickCount() == 2 && list.getModel().getSize() != 0) {
            int index = list.locationToIndex(evt.getPoint());
            Post selectedPost = (Post) list.getModel().getElementAt(index);
            if (selectedPost != null) {
                PostDialog pd = new PostDialog(this, true, selectedPost, this.user);
            }
        }
    }//GEN-LAST:event_postsListMouseClicked

    private void clearPostFields() {
        postTextArea.setText("");
        postPublicBox.setSelected(false);
    }
    
    private void showFriendsPanel() {
        DefaultListModel<User> friends = new DefaultListModel<>();

        for (String key : this.user.getFriends()) {
            User u = this.db.getUserById(key);
            friends.addElement(u);
        }

        friendsList.setModel(friends);
        tabPane.setTitleAt(2, "Friends (" + this.user.getFriends().size() + ")");
    }

    private void populatePosts() {
        DefaultListModel<Post> postsModel = new DefaultListModel<Post>();
        
        for(String key: this.user.getPosts().keySet()) {
            Post p = this.user.getPostById(key);
            postsModel.addElement(p);
        }
        
        postsList.setModel(postsModel);
        
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearPostButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JList<User> friendsList;
    private javax.swing.JPanel friendsPanel;
    private javax.swing.JPanel groupsPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JButton logoutButton;
    private javax.swing.JButton makePostButton;
    private javax.swing.JButton nameSearchButton;
    private javax.swing.JTextField nameSearchField;
    private javax.swing.JLabel nameSearchLabel;
    private javax.swing.JPanel notificationPanel;
    private javax.swing.JPanel optionsPanel;
    private javax.swing.JCheckBox postPublicBox;
    private javax.swing.JTextArea postTextArea;
    private javax.swing.JList<Post> postsList;
    private javax.swing.JPanel profilePane;
    private gui.ProfilePanel profilePanel;
    private javax.swing.JList<User> requetsList;
    private javax.swing.JList<User> searchFriendsList;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JTabbedPane tabPane;
    // End of variables declaration//GEN-END:variables
}
