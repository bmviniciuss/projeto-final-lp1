/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import Listeners.DeletePostListener;
import social.Comment;
import social.Group;
import social.PhotoPost;
import social.Post;
import social.User;
import utils.Images;

/**
 *
 * @author bmvin
 */
public class PhotoPostView extends javax.swing.JPanel {

    private DeletePostListener listener;
    private PhotoPost pp;
    private User owner;
    private User currentUser;
    private Group group;

    /**
     * Creates new form PhotoPostView
     *
     * @param pp
     * @param owner
     * @param currentUser
     * @param group
     */
    public PhotoPostView(PhotoPost pp, User owner, User currentUser, Group group) {
        initComponents();
        this.pp = pp;
        this.owner = owner;
        this.currentUser = currentUser;
        this.group = group;

        authorName.setText(pp.getOwner().getName());

        if (pp.getFile() != null) {
            photoLabel.setIcon(Images.photoPost(pp.getFile()));
            photoLabel.setText(null);

        }

        buttonsVisibility();
        updateLikesCounter();
        updateComments();

        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        authorName = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        photoLabel = new javax.swing.JLabel();
        likeButton = new javax.swing.JButton();
        dislikeButton = new javax.swing.JButton();
        commentButton = new javax.swing.JButton();
        deletePhotoButton = new javax.swing.JButton();
        likeslabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        commentsPanel = new javax.swing.JPanel();

        authorName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jScrollPane2.setViewportView(photoLabel);

        likeButton.setText("Like");
        likeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                likeButtonActionPerformed(evt);
            }
        });

        dislikeButton.setText("Dislike");
        dislikeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dislikeButtonActionPerformed(evt);
            }
        });

        commentButton.setText("Comment");
        commentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commentButtonActionPerformed(evt);
            }
        });

        deletePhotoButton.setText("Delete");
        deletePhotoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePhotoButtonActionPerformed(evt);
            }
        });

        likeslabel.setText("Likes: 0");

        commentsPanel.setLayout(new javax.swing.BoxLayout(commentsPanel, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane1.setViewportView(commentsPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(authorName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(likeButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dislikeButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(commentButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deletePhotoButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(likeslabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(authorName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(likeButton)
                    .addComponent(dislikeButton)
                    .addComponent(deletePhotoButton)
                    .addComponent(likeslabel)
                    .addComponent(commentButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void likeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_likeButtonActionPerformed
        pp.likePost(currentUser.getUuid());
        updateLikesCounter();
        buttonsVisibility();
    }//GEN-LAST:event_likeButtonActionPerformed

    private void dislikeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dislikeButtonActionPerformed
        pp.removeLike(currentUser.getUuid());
        buttonsVisibility();
        updateLikesCounter();

    }//GEN-LAST:event_dislikeButtonActionPerformed

    private void deletePhotoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePhotoButtonActionPerformed
        
        if (listener != null) {
            listener.deletePost(pp, currentUser);
        }
    }//GEN-LAST:event_deletePhotoButtonActionPerformed

    private void commentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commentButtonActionPerformed
        AddComment ad = new AddComment(null, true, currentUser, pp);
        updateComments();
    }//GEN-LAST:event_commentButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel authorName;
    private javax.swing.JButton commentButton;
    private javax.swing.JPanel commentsPanel;
    private javax.swing.JButton deletePhotoButton;
    private javax.swing.JButton dislikeButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton likeButton;
    private javax.swing.JLabel likeslabel;
    private javax.swing.JLabel photoLabel;
    // End of variables declaration//GEN-END:variables

    private void buttonsVisibility() {
        User ppOwner = pp.getOwner();
        if (currentUser.getUuid().equals(ppOwner.getUuid())) {
            deletePhotoButton.setVisible(true);
        } else {
            deletePhotoButton.setVisible(false);
        }
        if (pp.hasLiked(currentUser.getUuid())) {
            likeButton.setVisible(false);
            dislikeButton.setVisible(true);
        } else {
            likeButton.setVisible(true);
            dislikeButton.setVisible(false);
        }

        if (isOwner()) {
            deletePhotoButton.setVisible(true);
        }

        if (group != null) {
            if (group.isAdmin(currentUser.getUuid())) {
                deletePhotoButton.setVisible(true);
            }
        }
    }

    private void updateLikesCounter() {
        int likes = 0;
        likes = pp.numLikes();
        likeslabel.setText("Likes: " + likes);
    }

    /**
     * @param listener the listener to set
     */
    public void setListener(DeletePostListener listener) {
        this.listener = listener;
    }

    private void updateComments() {
        commentsPanel.removeAll();

        for (Comment cm : this.pp.getComments()) {
            CommentView cv = new CommentView(cm, currentUser, pp, commentsPanel);
            commentsPanel.add(cv);
        }

        commentsPanel.repaint();
        commentsPanel.revalidate();
    }

    private boolean isOwner() {

        if (owner.getUuid().equals(currentUser.getUuid()) || currentUser.getUuid().equals(pp.getOwner().getUuid())) {
            return true;
        }
        return false;
    }
}
